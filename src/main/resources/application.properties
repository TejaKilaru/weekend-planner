# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/weekendplannerdb
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

###########

spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

###########

# ===============================
# = DATA SOURCE
# ===============================
db.url=jdbc:mysql://localhost:3306/weekendplannerdb?autoReconnect=true
db.username=root
db.password=root
db.maxwait=2
db.maxactive=5
db.port=3306
db.initalsize=2
db.maxidle=2
db.minidle=2
db.removeAbandoned=false
db.removeAbandonedTimeout=60
db.testOnBorrow=true
db.validationQuery=SELECT 1 + 1
db.minEvictableIdleTimeMillis=30000
db.testWhileIdle=true
db.testOnReturn=true
db.timeBetweenEvictionRunsMillis=30000
db.logAbandoned=true
db.driverclass=com.mysql.jdbc.Driver
db.hibernate.ddl=none
db.hibernate.data=
db.dialect=org.hibernate.dialect.MySQLDialect
db.show.sql=true



##### Mail #####
spring.mail.host=smtp.gmail.com
spring.mail.username= mailtesting.noreply@gmail.com	
spring.mail.password= test#123

spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false